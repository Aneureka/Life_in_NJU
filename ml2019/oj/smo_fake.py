# encoding=utf8
import numpy as np
from sklearn.svm import SVC
import matplotlib.pyplot as plt

class smo:
    def __init__(self, max_iter=100, kernel='linear'):
        '''
        input:max_iter(int):最大训练轮数
              kernel(str):核函数，等于'linear'表示线性，等于'poly'表示多项式
        '''
        self.clf = SVC(kernel='poly', degree=3, C=10, gamma='auto', tol=2)

    # 训练
    def fit(self, features, labels):
        '''
        input:features(ndarray):特征
              label(ndarray):标签
        '''
        self.clf.fit(features, labels)

    def predict(self, data):
        '''
        input:data(ndarray):单个样本
        output:预测为正样本返回+1，负样本返回-1
        '''
        data = data[np.newaxis, :]
        return self.clf.predict(data)[0]

    # ********* End *********#


def plot_data(features, labels):
    indices_0 = np.where(labels == -1)[0]
    indices_1 = np.where(labels == 1)[0]
    plt.scatter(features[indices_0, 0], features[indices_0, 1], marker='o')
    plt.scatter(features[indices_1, 0], features[indices_1, 1], marker='x')
    plt.show()


if __name__ == '__main__':
    s = smo()
    features = np.array([[0, 0], [1, 1], [1, 0], [2, 1]])
    labels = np.array([1, 1, -1, -1])
    features = np.array([[-1.01890872, -0.42760479],
 [-0.62926867, -0.07869789],
 [-0.23962863, -1.41617436],
 [-1.01890872, -0.34037807],
 [-1.11631873,  1.43323203],
 [ 1.02670152,  2.01474354],
 [-0.23962863,  0.29928459],
 [-0.53185866,  1.49138318],
 [-0.23962863, -0.25315134],
 [-0.53185866,  1.40415645],
 [ 0.44224145, -0.10777347],
 [-0.62926867,  0.15390671],
 [-0.23962863,  0.09575556],
 [-1.60336879,  0.56096477],
 [ 2.00080164, -0.892814  ],
 [ 0.05260141,  0.06667999],
 [ 2.19562166, -0.6602094 ],
 [-1.60336879, -0.02054674],
 [ 0.44224145, -0.10777347],
 [-1.11631873, -0.98004073],
 [ 0.73447149, -1.35802321],
 [-1.31113875, -1.21264533],
 [-0.04480861,  0.70634264],
 [ 0.15001142,  0.12483114],
 [-0.14221862, -0.42760479],
 [-1.89559882,  0.38651132],
 [ 0.63706147, -0.86373843],
 [-0.92149871, -0.39852922],
 [ 1.22152154, -0.95096515],
 [ 1.41634157, -0.892814  ],
 [-1.31113875, -0.39852922],
 [ 0.44224145,  0.03760441],
 [-1.01890872, -0.31130249],
 [-0.04480861, -0.19500019],
 [ 0.24742143, -0.34037807],
 [ 2.09821165, -0.7765117 ],
 [-0.23962863,  0.18298229],
 [-0.04480861,  0.18298229],
 [-0.23962863, -0.28222692],
 [ 0.44224145,  0.29928459],
 [-1.11631873,  0.32836016],
 [-1.79818881,  0.47373804],
 [-0.14221862, -0.16592462],
 [-0.92149871, -0.28222692],
 [-1.01890872, -0.31130249],
 [-0.04480861,  2.18919699],
 [-1.50595878, -1.47432551],
 [ 0.73447149, -0.68928497],
 [ 0.44224145,  0.18298229],
 [ 0.53965146,  1.75306336],
 [-1.79818881, -1.27079648],
 [ 0.44224145,  2.33457486],
 [-0.04480861,  0.09575556],
 [ 1.41634157, -1.38709878],
 [-0.43444865, -0.74743612],
 [ 0.15001142,  0.29928459],
 [-0.43444865, -1.18356975],
 [ 0.24742143,  0.06667999],
 [-0.62926867,  0.06667999],
 [-1.01890872,  0.59004034],
 [ 1.12411153,  0.56096477],
 [ 0.8318815,   1.40415645],
 [-0.14221862,  1.66583663],
 [ 0.8318815,   0.29928459],
 [-1.40854877, -0.60205825],
 [-0.23962863, -1.21264533],
 [ 2.19562166, -1.0091163 ],
 [ 0.24742143, -0.63113382],
 [-0.62926867, -1.56155223],
 [ 1.31893156, -1.32894763],
 [ 1.22152154,  0.56096477],
 [ 2.09821165,  0.56096477],
 [ 0.53965146,  1.25877858],
 [ 1.31893156,  1.89844123],
 [-0.23962863,  0.56096477],
 [-0.62926867, -1.0091163 ],
 [-0.72667869,  1.92751681],
 [ 0.53965146,  1.86936566],
 [-1.60336879, -1.53247666],
 [-0.23962863,  1.14247627],
 [ 2.00080164,  0.93894725],
 [ 1.02670152,  2.10197026],
 [ 1.02670152, -1.1254186 ],
 [ 0.05260141,  0.06667999],
 [-0.8240887,  -0.74743612],
 [-0.14221862,  1.43323203],
 [-1.79818881, -1.38709878],
 [ 0.34483144,  0.06667999],
 [ 1.02670152,  1.81121451],
 [-0.8240887,   0.18298229],
 [ 0.24742143,  1.1134007 ],
 [-0.04480861, -1.03819188],
 [-0.04480861,  0.24113344],
 [-1.11631873, -0.48575595],
 [-0.72667869, -0.57298267],
 [ 0.34483144,  0.09575556],
 [-1.40854877,  0.38651132],
 [ 0.44224145, -0.42760479],
 [ 0.15001142,  0.18298229],
 [-1.60336879,  0.09575556],
 [-1.7007788,   0.15390671],
 [ 0.92929151,  2.18919699],
 [-1.21372874,  0.32836016],
 [ 0.8318815,  -0.28222692],
 [-1.79818881, -1.44524993],
 [ 0.24742143,  2.13104584],
 [ 0.05260141,  1.25877858],
 [ 0.73447149, -1.06726745],
 [ 1.02670152, -1.03819188],
 [ 1.02670152, -1.15449418],
 [ 2.09821165,  1.78213893],
 [-0.23962863, -1.35802321],
 [-0.04480861, -0.39852922],
 [-1.01890872,  0.79356937],
 [ 2.19562166, -0.7765117 ],
 [-0.33703864, -1.27079648],
 [-1.11631873, -1.06726745],
 [ 2.19562166,  0.41558689],
 [-0.53185866, -1.47432551],
 [ 0.44224145,  0.61911592],
 [-1.31113875, -1.44524993],
 [ 0.15001142,  0.06667999],
 [ 0.8318815,   0.15390671],
 [ 0.15001142,  0.79356937],
 [ 0.44224145,  0.32836016],
 [ 0.05260141, -0.22407577],
 [ 0.15001142, -0.7765117 ],
 [-0.53185866,  2.36365044],
 [-0.72667869, -1.50340108],
 [-0.04480861,  0.32836016],
 [ 0.92929151, -0.51483152],
 [-0.72667869, -0.19500019],
 [-0.23962863, -0.63113382],
 [ 1.61116159, -1.24172091],
 [ 0.15001142,  0.24113344],
 [-1.11631873,  0.44466247],
 [-1.40854877, -0.07869789],
 [-0.62926867, -0.31130249],
 [-0.62926867,  1.43323203],
 [ 1.51375158,  0.38651132],
 [-0.53185866,  0.90987167],
 [ 0.73447149, -1.35802321],
 [-1.79818881, -1.24172091],
 [ 1.51375158,  0.09575556],
 [-0.04480861, -0.48575595],
 [-1.31113875, -0.39852922],
 [-0.04480861, -0.45668037],
 [ 0.8318815,  -1.32894763],
 [-1.21372874, -1.35802321],
 [ 0.15001142,  1.54953433],
 [ 0.05260141,  0.32836016],
 [ 1.02670152,  0.61911592],
 [ 1.41634157,  0.61911592],
 [-1.7007788,  -0.57298267],
 [ 1.80598161,  1.86936566],
 [-0.92149871,  0.59004034],
 [ 0.8318815,   0.56096477],
 [ 0.34483144,  0.09575556],
 [-0.62926867,  0.59004034],
 [ 1.02670152, -1.03819188],
 [ 0.34483144,  0.29928459],
 [-0.23962863, -0.71836055],
 [ 0.8318815,   0.79356937],
 [ 0.73447149, -1.24172091],
 [-0.23962863,  0.64819149],
 [-0.8240887,   2.30549929],
 [ 1.41634157,  2.36365044],
 [-1.50595878, -0.16592462],
 [ 0.92929151,  1.1134007 ],
 [ 0.92929151,  1.28785415],
 [ 1.22152154, -1.41617436],
 [-0.43444865, -0.80558727],
 [ 0.15001142,  0.06667999],
 [-0.92149871, -1.06726745],
 [-0.14221862, -1.03819188],
 [-0.92149871, -0.28222692],
 [ 0.24742143,  0.09575556],
 [ 1.41634157,  2.01474354],
 [ 0.05260141, -0.22407577],
 [ 1.02670152, -0.80558727],
 [-1.01890872,  0.56096477],
 [-1.31113875, -1.32894763],
 [-1.11631873,  0.09575556],
 [ 1.51375158,  2.16012141],
 [ 1.61116159,  0.03760441],
 [-1.21372874, -1.03819188],
 [-0.33703864,  0.09575556],
 [-0.53185866,  1.92751681],
 [-0.8240887,  -0.22407577],
 [ 0.92929151, -0.57298267],
 [-0.33703864,  1.25877858],
 [-1.79818881,  0.03760441],
 [ 0.24742143,  0.27020901],
 [-0.14221862,  0.18298229],
 [ 0.24742143, -0.10777347],
 [ 1.41634157,  1.31692973],
 [-0.23962863, -0.892814  ],
 [-0.53185866, -1.47432551],
 [ 0.44224145, -0.45668037],
 [-1.21372874,  0.29928459],
 [-0.43444865, -0.51483152],
 [ 1.12411153, -0.10777347],
 [-0.72667869,  1.1134007 ],
 [-0.72667869,  1.37508088],
 [ 1.90339162,  1.54953433],
 [-1.7007788,  -0.95096515],
 [ 0.92929151, -1.32894763],
 [-0.23962863,  0.24113344],
 [ 0.15001142, -0.22407577],
 [ 0.8318815,  -1.06726745],
 [-1.50595878, -1.21264533],
 [-0.8240887,   0.32836016],
 [ 0.44224145,  0.12483114],
 [ 0.15001142,  1.89844123],
 [-1.11631873, -1.56155223],
 [-0.62926867,  0.21205786],
 [-1.01890872, -1.41617436],
 [ 0.24742143, -0.34037807],
 [ 0.05260141,  1.28785415],
 [ 0.24742143, -0.22407577],
 [ 1.7085716,   1.78213893],
 [-0.14221862, -0.5439071 ],
 [ 0.05260141, -0.39852922],
 [-1.01890872,  0.44466247],
 [-0.8240887,  -1.18356975],
 [-1.7007788,  -1.32894763],
 [-1.7007788,   0.50281362],
 [-0.23962863,  0.82264495],
 [-0.43444865, -1.09634303],
 [-0.72667869, -1.56155223],
 [-0.04480861,  0.03760441],
 [-1.01890872, -1.50340108],
 [-0.8240887,   0.41558689],
 [ 2.00080164, -1.32894763],
 [ 0.34483144, -0.25315134],
 [-0.04480861,  0.32836016],
 [-0.92149871,  0.29928459],
 [ 1.12411153,  2.10197026],
 [-1.89559882, -0.48575595],
 [ 0.44224145,  1.02617397],
 [ 2.19562166,  1.14247627],
 [-0.33703864,  1.3460053 ],
 [ 1.12411153, -1.18356975],
 [-1.11631873, -1.1254186 ],
 [ 0.92929151, -1.1254186 ],
 [-0.92149871,  0.47373804],
 [ 1.02670152,  0.15390671],
 [-0.04480861, -0.34037807],
 [-0.43444865, -0.25315134],
 [ 0.34483144, -0.48575595],
 [ 1.02670152,  1.89844123],
 [-1.40854877, -0.16592462],
 [ 1.12411153,  0.59004034],
 [-0.8240887,   0.41558689],
 [-1.01890872, -1.09634303],
 [ 0.92929151, -0.74743612],
 [ 1.12411153,  0.50281362],
 [-0.72667869,  0.53188919],
 [ 0.05260141, -0.5439071 ],
 [-0.43444865,  0.00852884],
 [ 1.80598161,  1.02617397],
 [ 1.31893156,  2.24734814],
 [ 1.51375158,  1.02617397],
 [ 2.09821165,  0.21205786],
 [-0.8240887,  -0.63113382],
 [ 1.02670152,  0.79356937],
 [ 0.44224145, -0.13684904],
 [ 0.8318815,  -1.35802321],
 [ 0.05260141, -0.28222692],
 [ 1.51375158, -1.0091163 ],
 [ 0.8318815,   0.38651132],
 [ 1.02670152, -0.98004073],
 [-0.14221862,  0.8807961 ],
 [-0.33703864, -0.74743612],
 [-0.23962863, -0.34037807],
 [ 2.09821165, -1.15449418],
 [ 0.8318815,  -0.80558727],
 [-0.04480861,  1.98566796],
 [-0.14221862,  2.18919699],
 [ 1.90339162, -1.03819188],
 [ 0.15001142,  1.89844123],
 [-0.23962863, -0.39852922],
 [-1.11631873, -1.50340108],
 [ 0.34483144, -1.1254186 ],
 [ 0.24742143,  0.18298229],
 [ 0.24742143, -0.25315134],
 [-1.89559882, -0.71836055],
 [-1.11631873,  0.50281362],
 [-0.04480861,  0.06667999],
 [-0.33703864, -0.74743612],
 [-0.62926867, -0.02054674],
 [ 0.34483144, -0.28222692],
 [-1.31113875, -0.31130249],
 [ 0.73447149,  0.29928459],
 [-0.23962863, -0.45668037],
 [-1.01890872,  0.61911592],
 [-1.40854877, -1.18356975],
 [ 0.92929151, -1.27079648],
 [ 0.8318815,  -1.18356975],
 [-0.92149871, -0.92188958]])
    labels = np.array([-1, -1, -1, -1, -1,  1, -1,  1, -1,  1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1,  1, -1,  1, -1,
 -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1,
 -1,  1, -1,  1, -1,  1, -1, -1, -1,  1, -1, -1,  1,  1,  1,  1, -1, -1,  1, -1, -1,  1,  1,  1,
  1, -1, -1, -1,  1, -1, -1, -1,  1, -1,  1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1, -1, -1, -1,
 -1, -1,  1, -1, -1,  1, -1, -1, -1,  1, -1,  1,  1,  1,  1, -1, -1,  1,  1, -1, -1,  1, -1,  1,
 -1, -1, -1,  1,  1, -1, -1,  1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1,  1,
 -1, -1, -1,  1, -1,  1, -1,  1,  1, -1,  1, -1,  1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1, -1,
  1,  1,  1, -1, -1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1,  1,  1, -1, -1,  1, -1,  1,  1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1, -1,  1, -1, -1,  1, -1, -1,  1,  1, -1, -1,
 -1, -1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1,  1, -1, -1, -1,  1, -1,  1,
  1, -1,  1, -1,  1, -1,  1, -1, -1, -1,  1, -1,  1, -1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1,
 -1,  1, -1, -1, -1,  1, -1,  1,  1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1])

    plot_data(features, labels)
    s.fit(features, labels)

    m = features.shape[0]
    acc = 0.0
    for i in range(features.shape[0]):
        if s.predict(features[i]) == labels[i]:
            acc += 1
    acc /= m
    print(acc)
    print(s.predict(np.array([ 0.8318815,  -1.18356975])))



